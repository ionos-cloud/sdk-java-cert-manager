openapi: 3.0.3
info:
  description: |-
    Using the Certificate Manager Service, you can conveniently provision and manage SSL certificates with IONOS services and your internal connected resources. For the [Application Load Balancer](https://api.ionos.com/docs/cloud/v6/#Application-Load-Balancers-get-datacenters-datacenterId-applicationloadbalancers), you usually need a certificate to encrypt your HTTPS traffic.

    The service provides the basic functions of uploading and deleting your certificates for this purpose.
  title: Certificate Manager Service API
  version: "1.0"
servers:
- description: Production
  url: https://api.ionos.com
security:
- basicAuth: []
- tokenAuth: []
tags:
- description: These endpoints are for documentation and information purposes.
  name: Information
- description: SSL certificates are used to secure network communications and prove
    the identity of websites on the Internet and resources on private networks.
  name: Certificates
paths:
  /certificatemanager/openapi.yaml:
    get:
      description: Displays the Open API documentation in the YAML format.
      operationId: getYamlOpenApiSpec
      responses:
        "200":
          content:
            application/yaml:
              schema:
                format: binary
                type: string
          description: Successful operation.
      summary: Get the Open API Documentation YAML
      tags:
      - Information
      x-accepts: application/yaml
  /certificatemanager/openapi.json:
    get:
      description: Displays the Open API documentation in the JSON format.
      operationId: getJsonOpenApiSpec
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: Successful operation.
      summary: Get the Open API Documentation JSON
      tags:
      - Information
      x-accepts: application/json
  /certificatemanager:
    get:
      description: Retrieves the service API information.
      operationId: getInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiInfoDto'
          description: Successful operation.
      summary: Get the Service API Information
      tags:
      - Information
      x-accepts: application/json
  /certificatemanager/certificates:
    get:
      description: Retrieves all available certificates.
      operationId: certificatesGet
      parameters:
      - description: |-
          'Limit' and 'Offset' are optional; you can use these filter parameters to retrieve only part of the results obtained by a request.

          Offset is the first element (from the complete list of elements) to be included in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - description: |-
          'Limit' and 'Offset' are optional; you can use these filter parameters to retrieve only part of the results of a query.

          If both 'Offset' and 'Limit'are specified, the offset lines are skipped before counting the returned limit lines.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateCollectionDto'
          description: Successful operation.
        "401":
          description: Unauthorized
      summary: Get Certificates
      tags:
      - Certificates
      x-accepts: application/json
    post:
      description: Adds a new PEM (Privacy Enhanced Mail) file that is used to store
        SSL certificates and their associated private keys.
      operationId: certificatesPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificatePostDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDto'
          description: Successful operation.
        "400":
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
      summary: Add a New Certificate
      tags:
      - Certificates
      x-contentType: application/json
      x-accepts: application/json
  /certificatemanager/certificates/{certificateId}:
    delete:
      description: Deletes a certificate specified by its ID.
      operationId: certificatesDelete
      parameters:
      - explode: false
        in: path
        name: certificateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful operation.
        "400":
          description: Bad Request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not Found.
      summary: Delete a Certificate by ID
      tags:
      - Certificates
      x-accepts: application/json
    get:
      description: Retrieves a certificate specified by its ID.
      operationId: certificatesGetById
      parameters:
      - explode: false
        in: path
        name: certificateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDto'
          description: Successful operation.
        "400":
          description: Bad Request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not Found.
      summary: Get a Certificate by ID
      tags:
      - Certificates
      x-accepts: application/json
    patch:
      description: Updates the name of the specified certificate.
      operationId: certificatesPatch
      parameters:
      - explode: false
        in: path
        name: certificateId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificatePatchDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDto'
          description: Successful operation.
        "400":
          description: Bad Request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not Found.
      summary: Update a Certificate Name by ID
      tags:
      - Certificates
      x-contentType: application/json
      x-accepts: application/json
components:
  schemas:
    ApiInfoDto:
      description: The information about the API.
      example:
        name: Certificate Manager API.
        href: https://openapi-generator.tech
        version: "1.0"
      properties:
        href:
          description: The API entry point.
          format: uri
          readOnly: true
          type: string
        name:
          description: The API name.
          example: Certificate Manager API.
          readOnly: true
          type: string
        version:
          description: The API version.
          example: "1.0"
          readOnly: true
          type: string
      type: object
    CertificatePostDto:
      description: Used to create a new certificate.
      example:
        properties:
          privateKey: '-----BEGIN RSA PRIVATE KEY-----MIIJKQIBAAKCAgEAzDehfqWBr+9q0pxwCDDRph7QSPiMbkDGaGKc+Fd2h3doT8Li-----END
            RSA PRIVATE KEY-----'
          certificateChain: '-----BEGIN CERTIFICATE-----MIIDoTCCAokCFDrAUWffdxWJVz2Axl9lp/4xiUteMA0GCSqGSIb3DQEBCwUAMIGG-----END
            CERTIFICATE-----'
          name: My Certificate
          certificate: '-----BEGIN CERTIFICATE-----MIIE5TCCAs2gAwIBAgIBATANBgkqhkiG9w0BAQsFADA2MQswCQYDVQQGEwJSTzEK-----END
            CERTIFICATE-----'
      properties:
        properties:
          $ref: '#/components/schemas/CertificatePostPropertiesDto'
      required:
      - properties
      type: object
    CertificatePatchDto:
      description: Used to patch a certificate's name.
      example:
        properties:
          name: My Certificate
      properties:
        properties:
          $ref: '#/components/schemas/CertificatePatchPropertiesDto'
      required:
      - properties
      type: object
    CertificateCollectionDto:
      description: A collection of certificates.
      example:
        offset: 10
        _links:
          next: https://api.ionos.com/certificatemanager/certificates?offset=70&limit=10
          prev: https://api.ionos.com/certificatemanager/certificates?offset=50&limit=10
          self: https://api.ionos.com/certificatemanager/certificates?offset=60&limit=10
        limit: 100
        id: Certificates
        href: https://api.ionos.com/certificatemanager/certificates
        type: collection
        items:
        - metadata:
            createdByUserId: 45480eb3fbfc31f1d916c1eaa4abdcc3
            createdDate: 2015-12-04T14:34:09.000Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.000Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 63f766c7-3f85-4d83-b528-8ddeec5b436c
          href: https://api.ionos.com/certificatemanager/certificates/63f766c7-3f85-4d83-b528-8ddeec5b436c
          type: certificate
          properties:
            certificateChain: '-----BEGIN CERTIFICATE-----MIIDoTCCAokCFDrAUWffdxWJVz2Axl9lp/4xiUteMA0GCSqGSIb3DQEBCwUAMIGG-----END
              CERTIFICATE-----'
            name: My Certificate
            certificate: '-----BEGIN CERTIFICATE-----MIIE5TCCAs2gAwIBAgIBATANBgkqhkiG9w0BAQsFADA2MQswCQYDVQQGEwJSTzEK-----END
              CERTIFICATE-----'
        - metadata:
            createdByUserId: 45480eb3fbfc31f1d916c1eaa4abdcc3
            createdDate: 2015-12-04T14:34:09.000Z
            createdBy: user@example.com
            lastModifiedDate: 2015-12-04T14:34:09.000Z
            lastModifiedBy: user@example.com
            etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
            state: AVAILABLE
            lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          id: 63f766c7-3f85-4d83-b528-8ddeec5b436c
          href: https://api.ionos.com/certificatemanager/certificates/63f766c7-3f85-4d83-b528-8ddeec5b436c
          type: certificate
          properties:
            certificateChain: '-----BEGIN CERTIFICATE-----MIIDoTCCAokCFDrAUWffdxWJVz2Axl9lp/4xiUteMA0GCSqGSIb3DQEBCwUAMIGG-----END
              CERTIFICATE-----'
            name: My Certificate
            certificate: '-----BEGIN CERTIFICATE-----MIIE5TCCAs2gAwIBAgIBATANBgkqhkiG9w0BAQsFADA2MQswCQYDVQQGEwJSTzEK-----END
              CERTIFICATE-----'
      properties:
        id:
          description: The resource ID.
          example: Certificates
          readOnly: true
          type: string
        type:
          description: The resource type.
          example: collection
          readOnly: true
          type: string
        href:
          description: The URL to the object representation (absolute path).
          example: https://api.ionos.com/certificatemanager/certificates
          format: uri
          readOnly: true
          type: string
        items:
          description: The list of certificates.
          items:
            $ref: '#/components/schemas/CertificateDto'
          readOnly: true
          type: array
        offset:
          description: The pagination offset.
          example: 10
          readOnly: true
          type: integer
        limit:
          description: The pagination limit.
          example: 100
          readOnly: true
          type: integer
        _links:
          $ref: '#/components/schemas/CertificateCollectionDto__links'
      type: object
    CertificateDto:
      description: The certificate information.
      example:
        metadata:
          createdByUserId: 45480eb3fbfc31f1d916c1eaa4abdcc3
          createdDate: 2015-12-04T14:34:09.000Z
          createdBy: user@example.com
          lastModifiedDate: 2015-12-04T14:34:09.000Z
          lastModifiedBy: user@example.com
          etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
          state: AVAILABLE
          lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
        id: 63f766c7-3f85-4d83-b528-8ddeec5b436c
        href: https://api.ionos.com/certificatemanager/certificates/63f766c7-3f85-4d83-b528-8ddeec5b436c
        type: certificate
        properties:
          certificateChain: '-----BEGIN CERTIFICATE-----MIIDoTCCAokCFDrAUWffdxWJVz2Axl9lp/4xiUteMA0GCSqGSIb3DQEBCwUAMIGG-----END
            CERTIFICATE-----'
          name: My Certificate
          certificate: '-----BEGIN CERTIFICATE-----MIIE5TCCAs2gAwIBAgIBATANBgkqhkiG9w0BAQsFADA2MQswCQYDVQQGEwJSTzEK-----END
            CERTIFICATE-----'
      properties:
        id:
          description: The certificate ID.
          example: 63f766c7-3f85-4d83-b528-8ddeec5b436c
          readOnly: true
          type: string
        type:
          description: The resource type.
          example: certificate
          readOnly: true
          type: string
        href:
          description: The URL to the object representation (absolute path).
          example: https://api.ionos.com/certificatemanager/certificates/63f766c7-3f85-4d83-b528-8ddeec5b436c
          readOnly: true
          type: string
        metadata:
          $ref: '#/components/schemas/ResourceMetadataDto'
        properties:
          $ref: '#/components/schemas/CertificatePropertiesDto'
      type: object
    ResourceMetadataDto:
      description: The metadata of the resource.
      example:
        createdByUserId: 45480eb3fbfc31f1d916c1eaa4abdcc3
        createdDate: 2015-12-04T14:34:09.000Z
        createdBy: user@example.com
        lastModifiedDate: 2015-12-04T14:34:09.000Z
        lastModifiedBy: user@example.com
        etag: 45480eb3fbfc31f1d916c1eaa4abdcc3
        state: AVAILABLE
        lastModifiedByUserId: 63cef532-26fe-4a64-a4e0-de7c8a506c90
      properties:
        etag:
          description: The entity tag of the resource, as defined in http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.11.
            The entity tag is also added as an 'ETag' response header to requests
            that do not use the 'depth' parameter.
          example: 45480eb3fbfc31f1d916c1eaa4abdcc3
          readOnly: true
          type: string
        createdDate:
          description: The date the resource was created.
          example: 2015-12-04T14:34:09.000Z
          readOnly: true
          type: string
        createdBy:
          description: The user who created the resource.
          example: user@example.com
          readOnly: true
          type: string
        createdByUserId:
          description: The ID of the user who created the resource.
          example: 45480eb3fbfc31f1d916c1eaa4abdcc3
          readOnly: true
          type: string
        lastModifiedDate:
          description: The date when the resource was last modified.
          example: 2015-12-04T14:34:09.000Z
          readOnly: true
          type: string
        lastModifiedBy:
          description: The user who last modified the resource.
          example: user@example.com
          readOnly: true
          type: string
        lastModifiedByUserId:
          description: The ID of the user who last modified the resource.
          example: 63cef532-26fe-4a64-a4e0-de7c8a506c90
          readOnly: true
          type: string
        state:
          description: The resource state.
          example: AVAILABLE
          type: string
      type: object
    CertificatePropertiesDto:
      example:
        certificateChain: '-----BEGIN CERTIFICATE-----MIIDoTCCAokCFDrAUWffdxWJVz2Axl9lp/4xiUteMA0GCSqGSIb3DQEBCwUAMIGG-----END
          CERTIFICATE-----'
        name: My Certificate
        certificate: '-----BEGIN CERTIFICATE-----MIIE5TCCAs2gAwIBAgIBATANBgkqhkiG9w0BAQsFADA2MQswCQYDVQQGEwJSTzEK-----END
          CERTIFICATE-----'
      properties:
        name:
          description: The certificate name.
          example: My Certificate
          type: string
        certificate:
          description: The certificate body.
          example: '-----BEGIN CERTIFICATE-----MIIE5TCCAs2gAwIBAgIBATANBgkqhkiG9w0BAQsFADA2MQswCQYDVQQGEwJSTzEK-----END
            CERTIFICATE-----'
          type: string
        certificateChain:
          description: Optional. The certificate chain.
          example: '-----BEGIN CERTIFICATE-----MIIDoTCCAokCFDrAUWffdxWJVz2Axl9lp/4xiUteMA0GCSqGSIb3DQEBCwUAMIGG-----END
            CERTIFICATE-----'
          type: string
      type: object
    CertificatePostPropertiesDto:
      example:
        privateKey: '-----BEGIN RSA PRIVATE KEY-----MIIJKQIBAAKCAgEAzDehfqWBr+9q0pxwCDDRph7QSPiMbkDGaGKc+Fd2h3doT8Li-----END
          RSA PRIVATE KEY-----'
        certificateChain: '-----BEGIN CERTIFICATE-----MIIDoTCCAokCFDrAUWffdxWJVz2Axl9lp/4xiUteMA0GCSqGSIb3DQEBCwUAMIGG-----END
          CERTIFICATE-----'
        name: My Certificate
        certificate: '-----BEGIN CERTIFICATE-----MIIE5TCCAs2gAwIBAgIBATANBgkqhkiG9w0BAQsFADA2MQswCQYDVQQGEwJSTzEK-----END
          CERTIFICATE-----'
      properties:
        name:
          description: The certificate name.
          example: My Certificate
          type: string
        certificate:
          description: The certificate body.
          example: '-----BEGIN CERTIFICATE-----MIIE5TCCAs2gAwIBAgIBATANBgkqhkiG9w0BAQsFADA2MQswCQYDVQQGEwJSTzEK-----END
            CERTIFICATE-----'
          type: string
        certificateChain:
          description: The certificate chain.
          example: '-----BEGIN CERTIFICATE-----MIIDoTCCAokCFDrAUWffdxWJVz2Axl9lp/4xiUteMA0GCSqGSIb3DQEBCwUAMIGG-----END
            CERTIFICATE-----'
          type: string
        privateKey:
          description: The RSA private key is used for authentication and symmetric
            key exchange when establishing an SSL session. It is a part of the public
            key infrastructure generally used with SSL certificates.
          example: '-----BEGIN RSA PRIVATE KEY-----MIIJKQIBAAKCAgEAzDehfqWBr+9q0pxwCDDRph7QSPiMbkDGaGKc+Fd2h3doT8Li-----END
            RSA PRIVATE KEY-----'
          type: string
      required:
      - certificate
      - certificateChain
      - name
      - privateKey
      type: object
      x-java-class-annotation: '@PemFormatMatch'
    CertificatePatchPropertiesDto:
      example:
        name: My Certificate
      properties:
        name:
          description: The certificate name.
          example: My Certificate
          type: string
      required:
      - name
      type: object
    ConfigPropertyDto:
      properties:
        id:
          description: The property id.
          readOnly: true
          type: string
        name:
          description: The property name.
          type: string
        value:
          description: The property value.
          type: string
        description:
          description: The property description.
          type: string
      required:
      - description
      - name
      - value
      type: object
    CertificateCollectionDto__links:
      example:
        next: https://api.ionos.com/certificatemanager/certificates?offset=70&limit=10
        prev: https://api.ionos.com/certificatemanager/certificates?offset=50&limit=10
        self: https://api.ionos.com/certificatemanager/certificates?offset=60&limit=10
      properties:
        prev:
          description: The previous page.
          example: https://api.ionos.com/certificatemanager/certificates?offset=50&limit=10
          type: string
        self:
          description: The current page.
          example: https://api.ionos.com/certificatemanager/certificates?offset=60&limit=10
          type: string
        next:
          description: The next page.
          example: https://api.ionos.com/certificatemanager/certificates?offset=70&limit=10
          type: string
      type: object
  securitySchemes:
    basicAuth:
      description: |-
        For 'Basic' authentication, take your credentials by first combining the username and password with a colon (``username:password``) and then encoding the resulting string in base64 (``YWxhZGRpbjpvcGVuc2VzYW1l``).

        **Example Request Header**

        ``Authorization: Basic YWxhZGRpbjpvcGVuc2VzYW1l``

         More details: https://en.wikipedia.org/wiki/Basic_access_authentication
      scheme: basic
      type: http
    tokenAuth:
      description: "Authorization is granted when a valid proof of identity is provided\
        \ along with an API request for data. This proof of identity is in the form\
        \ of a JSON web access token, a unique string that identifies a user. \n\n\
        **Example Request Header**\n\n``Authorization: Bearer ACCESS_TOKEN``"
      in: header
      name: Authorization
      type: apiKey

